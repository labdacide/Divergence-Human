{"version":3,"file":"lenis.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { version } from '../package.json'\r\nimport { clamp } from './maths.js'\r\n\r\nclass Animate {\r\n  to(target, { duration = 1, easing = (t) => t, ...keys } = {}) {\r\n    this.target = target\r\n    this.fromKeys = { ...keys }\r\n    this.toKeys = { ...keys }\r\n    this.keys = Object.keys({ ...keys })\r\n\r\n    // get initial values\r\n    this.keys.forEach((key) => {\r\n      this.fromKeys[key] = target[key]\r\n    })\r\n\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n  }\r\n\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  raf(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    this.currentTime = Math.min(\r\n      this.currentTime + deltaTime * 0.001,\r\n      this.duration\r\n    )\r\n\r\n    const progress = this.easing(this.progress)\r\n\r\n    this.keys.forEach((key) => {\r\n      const from = this.fromKeys[key]\r\n      const to = this.toKeys[key]\r\n\r\n      const value = from + (to - from) * progress\r\n\r\n      this.target[key] = value\r\n    })\r\n\r\n    if (progress === 1) {\r\n      this.isRunning = false\r\n    }\r\n  }\r\n\r\n  get progress() {\r\n    return this.currentTime / this.duration\r\n  }\r\n}\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({\r\n    duration = 1.2,\r\n    easing = (t) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)), // https://easings.net/en#easeOutExpo\r\n    smooth = true,\r\n    smoothTouch = false,\r\n    touchMultiplier = 2,\r\n    direction = 'vertical', // vertical, horizontal\r\n    gestureDirection = 'vertical', // vertical, horizontal, both\r\n    wrapper = window,\r\n    content = document.body,\r\n  } = {}) {\r\n    super()\r\n\r\n    window.lenisVersion = version\r\n\r\n    this.options = {\r\n      duration,\r\n      easing,\r\n      smooth,\r\n      smoothTouch,\r\n      touchMultiplier,\r\n      direction,\r\n      gestureDirection,\r\n      wrapper,\r\n      content,\r\n    }\r\n\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.smooth = smooth\r\n    this.smoothTouch = smoothTouch\r\n    this.touchMultiplier = touchMultiplier\r\n    this.direction = direction\r\n    this.gestureDirection = gestureDirection\r\n    this.wrapperNode = wrapper\r\n    this.contentNode = content\r\n\r\n    this.wrapperNode.addEventListener('scroll', this.onScroll)\r\n\r\n    //observe wrapper node size\r\n    if (this.wrapperNode === window) {\r\n      this.wrapperNode.addEventListener('resize', this.onWindowResize)\r\n      this.onWindowResize()\r\n    } else {\r\n      this.wrapperHeight = this.wrapperNode.offsetHeight\r\n      this.wrapperWidth = this.wrapperNode.offsetWidth\r\n\r\n      //observe wrapper node size\r\n      this.wrapperObserver = new ResizeObserver(this.onWrapperResize)\r\n      this.wrapperObserver.observe(this.wrapperNode)\r\n    }\r\n\r\n    this.contentHeight = this.contentNode.offsetHeight\r\n    this.contentWidth = this.contentNode.offsetWidth\r\n\r\n    //observe content node size\r\n    this.contentObserver = new ResizeObserver(this.onContentResize)\r\n    this.contentObserver.observe(this.contentNode)\r\n\r\n    //set initial scroll position\r\n    this.targetScroll =\r\n      this.scroll =\r\n      this.lastScroll =\r\n        this.wrapperNode[this.scrollProperty]\r\n\r\n    this.animate = new Animate()\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      el: this.wrapperNode,\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.includes('Win') ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      touchMultiplier: this.touchMultiplier,\r\n      useTouch: true,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n  }\r\n\r\n  get scrollProperty() {\r\n    let property\r\n    if (this.wrapperNode === window) {\r\n      property = this.direction === 'horizontal' ? 'scrollX' : 'scrollY'\r\n    } else {\r\n      property = this.direction === 'horizontal' ? 'scrollLeft' : 'scrollTop'\r\n    }\r\n    return property\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n    this.animate.stop()\r\n  }\r\n\r\n  destroy() {\r\n    if (this.wrapperNode === window) {\r\n      this.wrapperNode.removeEventListener('resize', this.onWindowResize)\r\n    }\r\n    this.wrapperNode.removeEventListener('scroll', this.onScroll)\r\n\r\n    this.virtualScroll.destroy()\r\n    this.wrapperObserver?.disconnect()\r\n    this.contentObserver.disconnect()\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.wrapperWidth = window.innerWidth\r\n    this.wrapperHeight = window.innerHeight\r\n  }\r\n\r\n  onWrapperResize = ([entry]) => {\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.wrapperWidth = rect.width\r\n      this.wrapperHeight = rect.height\r\n    }\r\n  }\r\n\r\n  onContentResize = ([entry]) => {\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.contentWidth = rect.width\r\n      this.contentHeight = rect.height\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return this.direction === 'horizontal'\r\n      ? this.contentWidth - this.wrapperWidth\r\n      : this.contentHeight - this.wrapperHeight\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, deltaX, originalEvent: e }) => {\r\n    if (e.ctrlKey) return\r\n\r\n    // switch to smooth if event is touch and touch is true\r\n    this.smooth = !!e.changedTouches ? this.smoothTouch : this.options.smooth\r\n\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    if (!this.smooth) return\r\n\r\n    // fix wheel holding scroll https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\r\n    if (e.buttons === 4) return\r\n\r\n    // prevent native wheel scrolling\r\n    if (this.smooth) e.preventDefault()\r\n\r\n    let delta = 0\r\n    if (this.gestureDirection === 'both') {\r\n      delta = deltaX + deltaY\r\n    } else if (this.gestureDirection === 'horizontal') {\r\n      delta = deltaX\r\n    } else {\r\n      // vertical\r\n      delta = deltaY\r\n    }\r\n\r\n    this.targetScroll -= delta\r\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\r\n\r\n    this.scrollTo(this.targetScroll)\r\n  }\r\n\r\n  raf(now) {\r\n    const deltaTime = now - (this.now || 0)\r\n    this.now = now\r\n\r\n    if (this.stopped || !this.smooth) return\r\n\r\n    this.lastScroll = this.scroll\r\n\r\n    // where this.scroll is updated\r\n    this.animate.raf(deltaTime)\r\n\r\n    if (this.scroll === this.targetScroll) {\r\n      // if target reached velocity should be 0\r\n      this.lastScroll = this.scroll\r\n    }\r\n\r\n    if (this.isScrolling) {\r\n      this.setScroll(this.scroll)\r\n      this.notify()\r\n    }\r\n\r\n    this.isScrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  get velocity() {\r\n    return this.scroll - this.lastScroll\r\n  }\r\n\r\n  setScroll(value) {\r\n    this.direction === 'horizontal'\r\n      ? this.wrapperNode.scrollTo(value, 0)\r\n      : this.wrapperNode.scrollTo(0, value)\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    // if isScrolling false we can consider user isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to value immediately\r\n    if (!this.isScrolling || !this.smooth) {\r\n      // where native scroll happens\r\n      this.targetScroll =\r\n        this.scroll =\r\n        this.lastScroll =\r\n          this.wrapperNode[this.scrollProperty]\r\n\r\n      this.notify()\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    this.emit('scroll', {\r\n      scroll: this.scroll,\r\n      limit: this.limit,\r\n      velocity: this.velocity,\r\n      direction: this.direction,\r\n      progress: this.scroll / this.limit,\r\n    })\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      duration = this.duration,\r\n      easing = this.easing,\r\n    } = {}\r\n  ) {\r\n    if (target === undefined || target === null) return\r\n    let value\r\n\r\n    if (typeof target === 'number') {\r\n      value = target\r\n    } else if (target === 'top' || target === '#top') {\r\n      value = 0\r\n    } else if (target === 'bottom') {\r\n      value = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!node) return\r\n      let wrapperOffset = 0\r\n\r\n      if (this.wrapperNode !== window) {\r\n        const wrapperRect = this.wrapperNode.getBoundingClientRect()\r\n        wrapperOffset =\r\n          this.direction === 'horizontal' ? wrapperRect.left : wrapperRect.top\r\n      }\r\n\r\n      const rect = node.getBoundingClientRect()\r\n\r\n      value =\r\n        (this.direction === 'horizontal' ? rect.left : rect.top) +\r\n        this.scroll -\r\n        wrapperOffset\r\n    }\r\n\r\n    value += offset\r\n\r\n    this.targetScroll = value\r\n\r\n    if (!this.smooth || immediate) {\r\n      this.setScroll(this.targetScroll)\r\n    } else {\r\n      this.animate.to(this, {\r\n        duration,\r\n        easing,\r\n        scroll: this.targetScroll,\r\n      })\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["_excluded","Lenis","to","target","_temp","_this","this","_ref","duration","_ref$duration","_ref$easing","easing","t","keys","fromKeys","toKeys","_extends","Object","forEach","key","currentTime","isRunning","stop","raf","deltaTime","_this2","Math","min","progress","from","_temp2","_navigator","_navigator$userAgentD","_navigator2","_this3","_ref2","_ref2$duration","_ref2$easing","pow","smooth","_ref2$smooth","smoothTouch","_ref2$smoothTouch","_ref2$touchMultiplier","touchMultiplier","_ref2$direction","direction","gestureDirection","_ref2$gestureDirectio","wrapper","_ref2$wrapper","window","content","_ref2$content","document","body","_EventEmitter","call","onWindowResize","wrapperWidth","innerWidth","wrapperHeight","innerHeight","onWrapperResize","_ref3","entry","rect","contentRect","width","height","onContentResize","_ref4","contentWidth","contentHeight","onVirtualScroll","_ref5","deltaY","deltaX","e","originalEvent","ctrlKey","changedTouches","options","stopped","preventDefault","buttons","targetScroll","max","limit","scrollTo","onScroll","isScrolling","scroll","lastScroll","wrapperNode","scrollProperty","notify","lenisVersion","contentNode","addEventListener","offsetHeight","offsetWidth","wrapperObserver","observe","contentObserver","ResizeObserver","animate","Animate","platform","navigator","userAgentData","virtualScroll","VirtualScroll","el","firefoxMultiplier","mouseMultiplier","includes","useKeyboard","useTouch","passive","on","EventEmitter","start","destroy","_this$wrapperObserver","removeEventListener","disconnect","now","setScroll","value","emit","velocity","_temp3","_ref6","_ref6$offset","offset","_ref6$immediate","immediate","_ref6$duration","node","querySelector","nodeType","wrapperOffset","wrapperRect","getBoundingClientRect","left","top","_createClass","get"],"mappings":"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"}